1Ô∏è‚É£ Prepare Your Django Project

Your project should have:
base.py (common settings)
prod.py (production settings)
static/ (your CSS/JS/images)
media/ (for uploads ‚Äî optional but recommended)

üëâ Example structure:

/home/username/project/
    ‚îú‚îÄ‚îÄ manage.py
    ‚îú‚îÄ‚îÄ projectname/
    ‚îÇ   ‚îú‚îÄ‚îÄ __init__.py
    ‚îÇ   ‚îú‚îÄ‚îÄ base.py
    ‚îÇ   ‚îú‚îÄ‚îÄ prod.py
    ‚îÇ   ‚îú‚îÄ‚îÄ urls.py
    ‚îÇ   ‚îî‚îÄ‚îÄ wsgi.py
    ‚îú‚îÄ‚îÄ static/
    ‚îÇ   ‚îî‚îÄ‚îÄ style.css
    ‚îî‚îÄ‚îÄ templates/

2Ô∏è‚É£ Upload Project to PythonAnywhere

You can use GitHub ‚Üí PythonAnywhere (best):
git clone https://github.com/yourusername/yourproject.git Or upload via PythonAnywhere File tab.

3Ô∏è‚É£ Create Virtual Environment

Open Bash console:

mkvirtualenv --python=python3.13 myenv
workon myenv
pip install -r requirements.txt

4Ô∏è‚É£ Configure Django Settings

In prod.py, make sure you have:

DEBUG = False
ALLOWED_HOSTS = ["yourusername.pythonanywhere.com"]

5Ô∏è‚É£ Apply Migrations + Collect Static
python manage.py migrate --settings=projectname.settings.prod
python manage.py collectstatic --settings=projectname.settings.prod


‚úÖ After this, a staticfiles/ folder will appear containing admin CSS + your CSS.

6Ô∏è‚É£ Configure PythonAnywhere Web App

Go to Web tab:

Source code:
/home/username/project

Virtualenv:
/home/username/.virtualenvs/myenv

WSGI file (edit):
Add:

import sys
path = '/home/username/project'
if path not in sys.path:
    sys.path.append(path)

from projectname.wsgi import application


Static files section:

URL: /static/
Directory: /home/username/project/staticfiles

URL: /media/
Directory: /home/username/project/media

7Ô∏è‚É£ Reload Web App

Click Reload button in Web tab.

‚úÖ Check your site:

/ ‚Üí your app loads with CSS

/admin/ ‚Üí admin loads with CSS

/media/... ‚Üí uploaded files are served

8Ô∏è‚É£ Test Admin Static

Visit:

https://yourusername.pythonanywhere.com/static/admin/css/base.css


If you see raw CSS text ‚Üí static setup is correct üéâ.

‚ö° Common Pitfalls

Wrong static path (e.g., portfolio_manager/staticfiles instead of staticfiles).

Forgot to run collectstatic.

Didn‚Äôt point to prod.py in migration/collectstatic commands.

Virtualenv mismatch.

================================================= production-ready prod.py template =================================================
from .base import *
import os
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

# ‚úÖ Security
DEBUG = False
ALLOWED_HOSTS = ["yourdomain.com", "yourproject.pythonanywhere.com"]

# ‚úÖ Database (example: MySQL on PythonAnywhere)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": os.environ.get("MYSQL_DB"),
        "USER": os.environ.get("MYSQL_USER"),
        "PASSWORD": os.environ.get("MYSQL_PASSWORD"),
        "HOST": os.environ.get("MYSQL_HOST", "yourusername.mysql.pythonanywhere-services.com"),
        "PORT": os.environ.get("MYSQL_PORT", "3306"),
        "OPTIONS": {
            "init_command": "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}

# ‚úÖ Static files
STATIC_URL = '/static/'

# Folder where Django collects all static files
STATIC_ROOT = BASE_DIR / "staticfiles"

# Extra static files (your custom CSS/JS/images)
STATICFILES_DIRS = [
    BASE_DIR / "static",  
]

# ‚úÖ Media files (uploads by users)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# ‚úÖ Security settings (recommended in production)
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = "DENY"
